OUTPUT_DIR: src/cu/solv
KERNEL_NAME: grycuk1_cu1
TEMPLATE_PARAMS: template<class Ver>
CONSTEXPR_FLAGS: |
  constexpr bool do_v = Ver::v;
  constexpr bool do_g = Ver::g;

# COUNT:
#   - nes
VIRIAL:
  - vs
GRADIENT:
  - gx
  - gy
  - gz

EXTRA_PARAMS: |
  , const real* restrict rsolv
  , const real* restrict rdescr
  , const real* restrict shct
  , const real* restrict rborn
  , const real* restrict drb
  , const real* restrict drbp
  , bool use_gk

I_VARIABLES:
  - shared real xi    from:x
  - shared real yi    from:y
  - shared real zi    from:z
  - shared real rsi   from:rsolv
  - shared real rdi   from:rdescr
  - shared real shcti from:shct
  - shared real rbi   from:rborn
  - shared real drbi  from:drb
  - shared real drbpi from:drbp
K_VARIABLES:
  - shared real xk      from:x
  - shared real yk      from:y
  - shared real zk      from:z
  - register real rsk   from:rsolv
  - register real rdk   from:rdescr
  - register real shctk from:shct
  - register real rbk   from:rborn
  - register real drbk  from:drb
  - register real drbpk from:drbp
I_FORCE:
  - register real gxi addto:gx
  - register real gyi addto:gy
  - register real gzi addto:gz
K_FORCE:
  - register real gxk addto:gx
  - register real gyk addto:gy
  - register real gzk addto:gz

FULL_PAIRWISE_INTERACTION: |
  real xr = @xk@ - @xi@;
  real yr = @yk@ - @yi@;
  real zr = @zk@ - @zi@;
  real r2 = xr*xr + yr*yr + zr*zr;
  if (incl) {
    real r = REAL_SQRT(r2);
    real rmi = REAL_MAX(@rsi@,@rdi@);
    real si = @rdi@ * @shcti@;
    real termi = -REAL_POW(@rbi@,4.) / (4. * pi);
    real rmk = REAL_MAX(@rsk@,@rdk@);
    real sk = @rdk@ * @shctk@;
    real termk = -REAL_POW(@rbk@,4.) / (4. * pi);
    bool computei = (@rsi@ > 0.) and (@rdk@ > 0.) and (rmi < r+sk);
    bool computek = (@rdi@ > 0.) and (@rsk@ > 0.) and (rmk < r+si);
    real dei = 0.;
    real dek = 0.;
    if (computei) {
      pair_dgrycuk (r,r2,rmi,sk,@drbi@,@drbpi@,termi,use_gk,dei);
    }
    if (computek) {
      pair_dgrycuk (r,r2,rmk,si,@drbk@,@drbpk@,termk,use_gk,dek);
    }
    real de = dei + dek;
    real dedx = de * xr;
    real dedy = de * yr;
    real dedz = de * zr;
    if CONSTEXPR (do_g) {
      @gxi@ += dedx;
      @gyi@ += dedy;
      @gzi@ += dedz;
      @gxk@ -= dedx;
      @gyk@ -= dedy;
      @gzk@ -= dedz;
    }
    if CONSTEXPR (do_v) {
      vstlxx += floatTo<vbuf_prec>(xr * dedx);
      vstlyx += floatTo<vbuf_prec>(yr * dedx);
      vstlzx += floatTo<vbuf_prec>(zr * dedx);
      vstlyy += floatTo<vbuf_prec>(yr * dedy);
      vstlzy += floatTo<vbuf_prec>(zr * dedy);
      vstlzz += floatTo<vbuf_prec>(zr * dedz);
    }
  }
