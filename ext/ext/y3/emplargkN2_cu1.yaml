KERNEL_VERSION_NUMBER: 24

OUTPUT_DIR: src/cu/solv
KERNEL_NAME: emplargkN2_cu1
TEMPLATE_PARAMS: template<class Ver>
CONSTEXPR_FLAGS: |
  constexpr bool do_e = Ver::e;
  constexpr bool do_g = Ver::g;
  constexpr bool do_v = Ver::v;
  static_assert(!Ver::a, "");
USE_NEIGH: false

# COUNT:
ENERGY:
  - ebuf
VIRIAL:
  - vbuf
GRADIENT:
  - gx
  - gy
  - gz

# CUT_DISTANCE:
OFF_DISTANCE: 'off'

# EXCLUDE_INFO: mdpuinfo
SCALE_1X_TYPE: real4_const_array,0,1,2,3

EXTRA_PARAMS: |
  , real* restrict trqx, real* restrict trqy, real* restrict trqz
  , const real (*restrict rpole)[10]
  , const real (*restrict uind)[3], const real (*restrict uinp)[3]
  , real f
IMPLICIT_PARAMS:
  - d::jpolar
  - d::njpolar
  - d::pdamp
  - d::thlval

I_VARIABLES:
  - shared real xi   from:x
  - shared real yi   from:y
  - shared real zi   from:z
  - shared real ci   from:rpole,MPL_PME_0
  - shared real dix  from:rpole,MPL_PME_X
  - shared real diy  from:rpole,MPL_PME_Y
  - shared real diz  from:rpole,MPL_PME_Z
  - shared real qixx from:rpole,MPL_PME_XX
  - shared real qixy from:rpole,MPL_PME_XY
  - shared real qixz from:rpole,MPL_PME_XZ
  - shared real qiyy from:rpole,MPL_PME_YY
  - shared real qiyz from:rpole,MPL_PME_YZ
  - shared real qizz from:rpole,MPL_PME_ZZ
  - shared real uidx from:uind,0
  - shared real uidy from:uind,1
  - shared real uidz from:uind,2
  - shared real uipx from:uinp,0
  - shared real uipy from:uinp,1
  - shared real uipz from:uinp,2
  - shared real pdi  from:pdamp
  - shared int  jpi  from:jpolar
K_VARIABLES:
  - shared   real xk   from:x
  - shared   real yk   from:y
  - shared   real zk   from:z
  - register real ck   from:rpole,MPL_PME_0
  - shared   real dkx  from:rpole,MPL_PME_X
  - shared   real dky  from:rpole,MPL_PME_Y
  - shared   real dkz  from:rpole,MPL_PME_Z
  - register real qkxx from:rpole,MPL_PME_XX
  - register real qkxy from:rpole,MPL_PME_XY
  - register real qkxz from:rpole,MPL_PME_XZ
  - register real qkyy from:rpole,MPL_PME_YY
  - register real qkyz from:rpole,MPL_PME_YZ
  - register real qkzz from:rpole,MPL_PME_ZZ
  - register real ukdx from:uind,0
  - register real ukdy from:uind,1
  - register real ukdz from:uind,2
  - register real ukpx from:uinp,0
  - register real ukpy from:uinp,1
  - register real ukpz from:uinp,2
  - register real pdk  from:pdamp
  - register int  jpk  from:jpolar
I_FORCE:
  - register real frcxi addto:gx
  - register real frcyi addto:gy
  - register real frczi addto:gz
  - register real trqxi addto:trqx
  - register real trqyi addto:trqy
  - register real trqzi addto:trqz
K_FORCE:
  - register real frcxk addto:gx
  - register real frcyk addto:gy
  - register real frczk addto:gz
  - register real trqxk addto:trqx
  - register real trqyk addto:trqy
  - register real trqzk addto:trqz

SCALED_PAIRWISE_INTERACTION: |
  real xr = @xk@ - @xi@;
  real yr = @yk@ - @yi@;
  real zr = @zk@ - @zi@;
  real r2 = xr * xr + yr * yr + zr * zr;
  if (r2 <= off * off and incl) {
    real pga = thlval[njpolar * jpi[klane] + jpk];
    real e1, vxx1, vyx1, vzx1, vyy1, vzy1, vzz1;
    real aewald = 0;
    pairMplar<Ver, NON_EWALD>(
      r2, make_real3(xr, yr, zr), scalea-1, scaleb-1, scalec-1, scaled-1,
      @ci@, make_real3(@dix@, @diy@, @diz@),
      @qixx@, @qixy@, @qixz@, @qiyy@, @qiyz@, @qizz@,
      make_real3(@uidx@, @uidy@, @uidz@),
      make_real3(@uipx@, @uipy@, @uipz@), @pdi@, pga,
      @ck@, make_real3(@dkx@, @dky@, @dkz@),
      @qkxx@, @qkxy@, @qkxz@, @qkyy@, @qkyz@, @qkzz@,
      make_real3(@ukdx@, @ukdy@, @ukdz@),
      make_real3(@ukpx@, @ukpy@, @ukpz@), @pdk@, pga,
      f, aewald,
      @frcxi@, @frcyi@, @frczi@, @frcxk@, @frcyk@, @frczk@,
      @trqxi@, @trqyi@, @trqzi@, @trqxk@, @trqyk@, @trqzk@,
      e1, vxx1, vyx1, vzx1, vyy1, vzy1, vzz1);
    if CONSTEXPR (do_e) {
      ebuftl += floatTo<ebuf_prec>(e1);
    }
    if CONSTEXPR (do_v) {
      vbuftlxx += floatTo<vbuf_prec>(vxx1);
      vbuftlyx += floatTo<vbuf_prec>(vyx1);
      vbuftlzx += floatTo<vbuf_prec>(vzx1);
      vbuftlyy += floatTo<vbuf_prec>(vyy1);
      vbuftlzy += floatTo<vbuf_prec>(vzy1);
      vbuftlzz += floatTo<vbuf_prec>(vzz1);
    }
  } // end if (include)
FULL_PAIRWISE_INTERACTION: |
  real xr = @xk@ - @xi@;
  real yr = @yk@ - @yi@;
  real zr = @zk@ - @zi@;
  real r2 = xr * xr + yr * yr + zr * zr;
  if (r2 <= off * off and incl) {
    real pga = thlval[njpolar * jpi[klane] + jpk];
    real e, vxx, vyx, vzx, vyy, vzy, vzz;
    real aewald = 0;
    pairMplar<Ver, NON_EWALD>(
      r2, make_real3(xr, yr, zr), 1, 1, 1, 1,
      @ci@, make_real3(@dix@, @diy@, @diz@),
      @qixx@, @qixy@, @qixz@, @qiyy@, @qiyz@, @qizz@,
      make_real3(@uidx@, @uidy@, @uidz@),
      make_real3(@uipx@, @uipy@, @uipz@), @pdi@, pga,
      @ck@, make_real3(@dkx@, @dky@, @dkz@),
      @qkxx@, @qkxy@, @qkxz@, @qkyy@, @qkyz@, @qkzz@,
      make_real3(@ukdx@, @ukdy@, @ukdz@),
      make_real3(@ukpx@, @ukpy@, @ukpz@), @pdk@, pga,
      f, aewald,
      @frcxi@, @frcyi@, @frczi@, @frcxk@, @frcyk@, @frczk@,
      @trqxi@, @trqyi@, @trqzi@, @trqxk@, @trqyk@, @trqzk@,
      e, vxx, vyx, vzx, vyy, vzy, vzz);
    if CONSTEXPR (do_e) {
      ebuftl += floatTo<ebuf_prec>(e);
    }
    if CONSTEXPR (do_v) {
      vbuftlxx += floatTo<vbuf_prec>(vxx);
      vbuftlyx += floatTo<vbuf_prec>(vyx);
      vbuftlzx += floatTo<vbuf_prec>(vzx);
      vbuftlyy += floatTo<vbuf_prec>(vyy);
      vbuftlzy += floatTo<vbuf_prec>(vzy);
      vbuftlzz += floatTo<vbuf_prec>(vzz);
    }
  } // end if (include)
