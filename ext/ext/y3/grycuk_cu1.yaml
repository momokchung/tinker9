OUTPUT_DIR: src/cu/solv
KERNEL_NAME: grycuk_cu1
# TEMPLATE_PARAMS:
# CONSTEXPR_FLAGS:

EXTRA_PARAMS: |
  , real descoff
  , real pi43
  , bool useneck
  , real* restrict rborn
  , const real* restrict rsolv
  , const real* restrict rdescr
  , const real* restrict shct
  , const real* restrict sneck
  , const real* restrict aneck
  , const real* restrict bneck
  , const real* restrict rneck

I_VARIABLES:
  - shared real xi     from:x
  - shared real yi     from:y
  - shared real zi     from:z
  - shared real rsi    from:rsolv
  - shared real rdi    from:rdescr
  - shared real shcti  from:shct
  - shared real snecki from:sneck
K_VARIABLES:
  - shared real xk       from:x
  - shared real yk       from:y
  - shared real zk       from:z
  - register real rsk    from:rsolv
  - register real rdk    from:rdescr
  - register real shctk  from:shct
  - register real sneckk from:sneck
I_FORCE:
  - register real rborni addto:rborn
K_FORCE:
  - register real rbornk addto:rborn

FULL_PAIRWISE_INTERACTION: |
  real xr = @xk@ - @xi@;
  real yr = @yk@ - @yi@;
  real zr = @zk@ - @zi@;
  real r2 = xr*xr + yr*yr + zr*zr;
  if (incl) {
    real r = REAL_SQRT(r2);
    real ri = REAL_MAX(@rsi@,@rdi@) + descoff;
    real si = @rdi@ * @shcti@;
    real mixsn = 0.5 * (@snecki@ + @sneckk@);
    real rk = REAL_MAX(@rsk@,@rdk@) + descoff;
    real sk = @rdk@ * @shctk@;
    bool computei = (@rsi@ > 0.) and (@rdk@ > 0.) and (sk > 0.);
    bool computek = (@rsk@ > 0.) and (@rdi@ > 0.) and (si > 0.);
    real pairrborni = 0.;
    real pairrbornk = 0.;
    if (computei) {
      pair_grycuk(r, r2, ri, @rdk@, sk, mixsn, pi43, useneck, aneck, bneck, rneck, pairrborni);
    }
    if (computek) {
      pair_grycuk(r, r2, rk, @rdi@, si, mixsn, pi43, useneck, aneck, bneck, rneck, pairrbornk);
    }

    @rborni@ += pairrborni;
    @rbornk@ += pairrbornk;
  }
