OUTPUT_DIR: src/cu/solv
KERNEL_NAME: epolarN2_cu1
TEMPLATE_PARAMS: template<class Ver>
CONSTEXPR_FLAGS: |
  constexpr bool do_e = Ver::e;
  constexpr bool do_a = Ver::a;
  constexpr bool do_g = Ver::g;
  constexpr bool do_v = Ver::v;
USE_NEIGH: false

COUNT:
  - nep
ENERGY:
  - ep
VIRIAL:
  - vep
GRADIENT:
  - gx
  - gy
  - gz

# CUT_DISTANCE:
OFF_DISTANCE: 'off'

EXCLUDE_INFO: mdpuinfo
SCALE_1X_TYPE: real4_const_array,1,2,3

EXTRA_PARAMS: |
  , real (*restrict ufld)[3], real (*restrict dufld)[6]
  , const real (*restrict rpole)[10]
  , const real (*restrict uind)[3], const real (*restrict uinp)[3]
  , real f
IMPLICIT_PARAMS:
  - d::jpolar
  - d::njpolar
  - d::pdamp
  - d::thlval

I_VARIABLES:
  - shared real xi   from:x
  - shared real yi   from:y
  - shared real zi   from:z
  - shared real ci   from:rpole,MPL_PME_0
  - shared real dix  from:rpole,MPL_PME_X
  - shared real diy  from:rpole,MPL_PME_Y
  - shared real diz  from:rpole,MPL_PME_Z
  - shared real qixx from:rpole,MPL_PME_XX
  - shared real qixy from:rpole,MPL_PME_XY
  - shared real qixz from:rpole,MPL_PME_XZ
  - shared real qiyy from:rpole,MPL_PME_YY
  - shared real qiyz from:rpole,MPL_PME_YZ
  - shared real qizz from:rpole,MPL_PME_ZZ
  - shared real uidx from:uind,0
  - shared real uidy from:uind,1
  - shared real uidz from:uind,2
  - shared real uipx from:uinp,0
  - shared real uipy from:uinp,1
  - shared real uipz from:uinp,2
  - shared real pdi  from:pdamp
  - shared int  jpi  from:jpolar
K_VARIABLES:
  - shared   real xk   from:x
  - shared   real yk   from:y
  - shared   real zk   from:z
  - register real ck   from:rpole,MPL_PME_0
  - shared   real dkx  from:rpole,MPL_PME_X
  - shared   real dky  from:rpole,MPL_PME_Y
  - shared   real dkz  from:rpole,MPL_PME_Z
  - register real qkxx from:rpole,MPL_PME_XX
  - register real qkxy from:rpole,MPL_PME_XY
  - register real qkxz from:rpole,MPL_PME_XZ
  - register real qkyy from:rpole,MPL_PME_YY
  - register real qkyz from:rpole,MPL_PME_YZ
  - register real qkzz from:rpole,MPL_PME_ZZ
  - shared   real ukdx from:uind,0
  - shared   real ukdy from:uind,1
  - shared   real ukdz from:uind,2
  - shared   real ukpx from:uinp,0
  - shared   real ukpy from:uinp,1
  - shared   real ukpz from:uinp,2
  - register real pdk from:pdamp
  - register int  jpk from:jpolar
I_FORCE:
  - register real frcxi   addto:gx
  - register real frcyi   addto:gy
  - register real frczi   addto:gz
  - register real ufld0i  addto:ufld,0
  - register real ufld1i  addto:ufld,1
  - register real ufld2i  addto:ufld,2
  - register real dufld0i addto:dufld,0
  - register real dufld1i addto:dufld,1
  - register real dufld2i addto:dufld,2
  - register real dufld3i addto:dufld,3
  - register real dufld4i addto:dufld,4
  - register real dufld5i addto:dufld,5
K_FORCE:
  - register real frcxk   addto:gx
  - register real frcyk   addto:gy
  - register real frczk   addto:gz
  - register real ufld0k  addto:ufld,0
  - register real ufld1k  addto:ufld,1
  - register real ufld2k  addto:ufld,2
  - register real dufld0k addto:dufld,0
  - register real dufld1k addto:dufld,1
  - register real dufld2k addto:dufld,2
  - register real dufld3k addto:dufld,3
  - register real dufld4k addto:dufld,4
  - register real dufld5k addto:dufld,5

SCALED_PAIRWISE_INTERACTION: |
  real xr = @xk@ - @xi@;
  real yr = @yk@ - @yi@;
  real zr = @zk@ - @zi@;
  real r2 = xr*xr + yr*yr + zr*zr;
  if (r2 <= off * off and incl) {
    real pga = thlval[njpolar * jpi[klane] + jpk];
    real e, vxx, vyx, vzx, vyy, vzy, vzz;
    real aewald = 0;
    pair_polar_v2<Ver, NON_EWALD>(
      r2, xr, yr, zr, scaleb, scalec, scaled, //
      @ci@, @dix@, @diy@, @diz@, @qixx@, @qixy@, @qixz@, @qiyy@, @qiyz@, @qizz@,
      @uidx@, @uidy@, @uidz@, @uipx@, @uipy@, @uipz@, @pdi@, pga, //
      @ck@, @dkx@, @dky@, @dkz@, @qkxx@, @qkxy@, @qkxz@, @qkyy@, @qkyz@, @qkzz@,
      @ukdx@, @ukdy@, @ukdz@, @ukpx@, @ukpy@, @ukpz@, @pdk@, pga, //
      f, aewald, //
      @frcxi@, @frcyi@, @frczi@, @frcxk@, @frcyk@, @frczk@,
      @ufld0i@, @ufld1i@, @ufld2i@, @ufld0k@, @ufld1k@, @ufld2k@,
      @dufld0i@, @dufld1i@, @dufld2i@, @dufld3i@, @dufld4i@, @dufld5i@,
      @dufld0k@, @dufld1k@, @dufld2k@, @dufld3k@, @dufld4k@, @dufld5k@, //
      e,vxx,vyx,vzx,vyy,vzy,vzz);
    if CONSTEXPR (do_e) {
      eptl += floatTo<ebuf_prec>(e);
      if CONSTEXPR (do_a) {
        if (scalec != 0 and e != 0) // pscale != 0
          neptl += 1;
      }
    }
    if CONSTEXPR (do_v) {
      veptlxx += floatTo<vbuf_prec>(vxx);
      veptlyx += floatTo<vbuf_prec>(vyx);
      veptlzx += floatTo<vbuf_prec>(vzx);
      veptlyy += floatTo<vbuf_prec>(vyy);
      veptlzy += floatTo<vbuf_prec>(vzy);
      veptlzz += floatTo<vbuf_prec>(vzz);
    }
  } // end if (include)
FULL_PAIRWISE_INTERACTION: |
  real xr = @xk@ - @xi@;
  real yr = @yk@ - @yi@;
  real zr = @zk@ - @zi@;
  real r2 = xr*xr + yr*yr + zr*zr;
  if (r2 <= off * off and incl) {
    real pga = thlval[njpolar * jpi[klane] + jpk];
    real e, vxx, vyx, vzx, vyy, vzy, vzz;
    real aewald = 0;
    pair_polar_v2<Ver, NON_EWALD>(
      r2, xr, yr, zr, 1, 1, 1, //
      @ci@, @dix@, @diy@, @diz@, @qixx@, @qixy@, @qixz@, @qiyy@, @qiyz@, @qizz@,
      @uidx@, @uidy@, @uidz@, @uipx@, @uipy@, @uipz@, @pdi@, pga, //
      @ck@, @dkx@, @dky@, @dkz@, @qkxx@, @qkxy@, @qkxz@, @qkyy@, @qkyz@, @qkzz@,
      @ukdx@, @ukdy@, @ukdz@, @ukpx@, @ukpy@, @ukpz@, @pdk@, pga, //
      f, aewald, //
      @frcxi@, @frcyi@, @frczi@, @frcxk@, @frcyk@, @frczk@,
      @ufld0i@, @ufld1i@, @ufld2i@, @ufld0k@, @ufld1k@, @ufld2k@,
      @dufld0i@, @dufld1i@, @dufld2i@, @dufld3i@, @dufld4i@, @dufld5i@,
      @dufld0k@, @dufld1k@, @dufld2k@, @dufld3k@, @dufld4k@, @dufld5k@, //
      e,vxx,vyx,vzx,vyy,vzy,vzz);
    if CONSTEXPR (do_e) {
      eptl += floatTo<ebuf_prec>(e);
      if CONSTEXPR (do_a) {
        if (e != 0)
          neptl += 1;
      }
    }
    if CONSTEXPR (do_v) {
      veptlxx += floatTo<vbuf_prec>(vxx);
      veptlyx += floatTo<vbuf_prec>(vyx);
      veptlzx += floatTo<vbuf_prec>(vzx);
      veptlyy += floatTo<vbuf_prec>(vyy);
      veptlzy += floatTo<vbuf_prec>(vzy);
      veptlzz += floatTo<vbuf_prec>(vzz);
    }
  } // end if (include)
