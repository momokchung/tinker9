OUTPUT_DIR: src/cu/solv
KERNEL_NAME: ewca_cu1
TEMPLATE_PARAMS: template <class Ver>
CONSTEXPR_FLAGS: |
  constexpr bool do_e = Ver::e;
  constexpr bool do_g = Ver::g;


# COUNT:
#   - ns
ENERGY:
  - es
GRADIENT:
  - gx
  - gy
  - gz

EXTRA_PARAMS: |
  , const real* restrict epsvdw
  , const real* restrict radvdw
  , real epso, real epsh
  , real rmino, real rminh
  , real shctd, real dispoff
  , real slevy, real awater
# IMPLICIT_PARAMS:

I_VARIABLES:
  - shared real xi    from:x
  - shared real yi    from:y
  - shared real zi    from:z
  - shared real epsli from:epsvdw
  - shared real rmini from:radvdw
K_VARIABLES:
  - shared   real xk    from:x
  - shared   real yk    from:y
  - shared   real zk    from:z
  - register real epslk from:epsvdw
  - register real rmink from:radvdw
I_FORCE:
  - register real gxi addto:gx
  - register real gyi addto:gy
  - register real gzi addto:gz
K_FORCE:
  - register real gxk addto:gx
  - register real gyk addto:gy
  - register real gzk addto:gz

#SCALED_PAIRWISE_INTERACTION: |
FULL_PAIRWISE_INTERACTION: |
  real xr = @xk@ - @xi@;
  real yr = @yk@ - @yi@;
  real zr = @zk@ - @zi@;
  real r2 = xr*xr + yr*yr + zr*zr;
  real e;
  
  if (incl) {
    real r = REAL_SQRT(r2);
    real r3 = r2 * r;
    real epsi = @epsli@;
    real rmin = @rmini@;
    real emixo = 4. * epso * epsi / REAL_POW((REAL_SQRT(epso)+REAL_SQRT(epsi)),2);
    real rmixo = 2. * (REAL_POW(rmino,3)+REAL_POW(rmin,3)) / (REAL_POW(rmino,2)+REAL_POW(rmin,2));
    real rmixo7 = REAL_POW(rmixo,7);
    real aoi = emixo * rmixo7;
    real emixh = 4. * epsh * epsi / REAL_POW((REAL_SQRT(epsh)+REAL_SQRT(epsi)),2);
    real rmixh = 2. * (REAL_POW(rminh,3)+REAL_POW(rmin,3)) / (REAL_POW(rminh,2)+REAL_POW(rmin,2));
    real rmixh7 = REAL_POW(rmixh,7);
    real ahi = emixh * rmixh7;
    real rio = rmixo / 2. + dispoff;
    real rih = rmixh / 2. + dispoff;
    real si = rmin * shctd;
    real si2 = si * si;

    real epsk = @epslk@;
    real rmkn = @rmink@;
    real emkxo = 4. * epso * epsk / REAL_POW((REAL_SQRT(epso)+REAL_SQRT(epsk)),2);
    real rmkxo = 2. * (REAL_POW(rmino,3)+REAL_POW(rmkn,3)) / (REAL_POW(rmino,2)+REAL_POW(rmkn,2));
    real rmkxo7 = REAL_POW(rmkxo,7);
    real aok = emkxo * rmkxo7;
    real emkxh = 4. * epsh * epsk / REAL_POW((REAL_SQRT(epsh)+REAL_SQRT(epsk)),2);
    real rmkxh = 2. * (REAL_POW(rminh,3)+REAL_POW(rmkn,3)) / (REAL_POW(rminh,2)+REAL_POW(rmkn,2));
    real rmkxh7 = REAL_POW(rmkxh,7);
    real ahk = emkxh * rmkxh7;
    real rko = rmkxo / 2. + dispoff;
    real rkh = rmkxh / 2. + dispoff;
    real sk = rmkn * shctd;
    real sk2 = sk * sk;
    
    real sum1,sum2;
    real de,de1,de2;
    real de11,de12,de21,de22;

    pair_ewca<Ver>(
      r, r2, r3, rio, rmixo, rmixo7,
      sk, sk2, aoi, emixo, sum1, de11, true);
    pair_ewca<Ver>(
      r, r2, r3, rih, rmixh, rmixh7,
      sk, sk2, ahi, emixh, sum2, de12, false);
    e = sum1 + sum2;
    
    pair_ewca<Ver>(
      r, r2, r3, rko, rmkxo, rmkxo7,
      si, si2, aok, emkxo, sum1, de21, true);
    pair_ewca<Ver>(
      r, r2, r3, rkh, rmkxh, rmkxh7,
      si, si2, ahk, emkxh, sum2, de22, false);
    e += sum1 + sum2;

    real slwater = slevy * awater;
    e *= -slwater;

    if CONSTEXPR (do_e)
      estl += floatTo<ebuf_prec>(e);
    if CONSTEXPR (do_g) {
      de1 = de11 + de12;
      de2 = de21 + de22;
      de = de1 + de2;
      de *= slwater / r;
      real dedx = de * xr;
      real dedy = de * yr;
      real dedz = de * zr;
      @gxi@ += dedx;
      @gyi@ += dedy;
      @gzi@ += dedz;
      @gxk@ -= dedx;
      @gyk@ -= dedy;
      @gzk@ -= dedz;
    }
  } // end if (include)
